/*
 * FormaSentencial.java
 *
 * Created on May 7, 2009, 3:04 PM
 */

package br.uem.din.yandre.sctmf.view.modelos_formais.ling_liv_contex.glc;

import br.uem.din.yandre.sctmf.model.pojo.GLC;
import br.uem.din.yandre.sctmf.model.pojo.SimboloString;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.ListCellRenderer;

/**
 *
 * @author  hp
 */
public class FormaSentencial extends javax.swing.JPanel {
    private Vector<JPanel> sequencia = new Vector();

    /** Creates new form FormaSentencial */
    public FormaSentencial() {
        initComponents();
        posInitComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        pNorth = new javax.swing.JPanel();
        simbolos = new javax.swing.JComboBox();
        pCenter = new javax.swing.JPanel();
        pButtons = new javax.swing.JPanel();
        bAdd = new javax.swing.JButton();
        bRemove = new javax.swing.JButton();
        pSoult = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout(0, 2));

        jPanel2.setLayout(new java.awt.BorderLayout());

        pNorth.setLayout(new java.awt.GridLayout(1, 0));

        pNorth.add(simbolos);

        jPanel2.add(pNorth, java.awt.BorderLayout.NORTH);

        pCenter.setLayout(new java.awt.BorderLayout(0, 1));

        pButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 5));

        bAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/uem/din/yandre/sctmf/view/icons/add16.png"))); // NOI18N
        bAdd.setPreferredSize(new java.awt.Dimension(30, 25));
        pButtons.add(bAdd);

        bRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/uem/din/yandre/sctmf/view/icons/rmv16.png"))); // NOI18N
        bRemove.setPreferredSize(new java.awt.Dimension(30, 25));
        pButtons.add(bRemove);

        pCenter.add(pButtons, java.awt.BorderLayout.NORTH);

        pSoult.setLayout(new java.awt.GridLayout(1, 0));

        list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        list.setMinimumSize(new java.awt.Dimension(50, 20));
        list.setVisibleRowCount(1);
        jScrollPane1.setViewportView(list);

        pSoult.add(jScrollPane1);

        pCenter.add(pSoult, java.awt.BorderLayout.CENTER);

        jPanel2.add(pCenter, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);

        jLabel1.setPreferredSize(new java.awt.Dimension(0, 3));
        add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jLabel2.setPreferredSize(new java.awt.Dimension(0, 3));
        add(jLabel2, java.awt.BorderLayout.PAGE_END);

        jLabel3.setPreferredSize(new java.awt.Dimension(3, 0));
        add(jLabel3, java.awt.BorderLayout.LINE_END);

        jLabel4.setPreferredSize(new java.awt.Dimension(3, 0));
        add(jLabel4, java.awt.BorderLayout.LINE_START);
    }// </editor-fold>//GEN-END:initComponents
    
    private void posInitComponents() {
        bAdd.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent ae) {
                addActionPerformed(ae);
            }
        });
        bRemove.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent ae) {
                rmvActionPerformed(ae);
            }
        });
        
        this.list.setListData(sequencia);
        this.list.setCellRenderer(new ListCellRenderer() {
            @Override
            public Component getListCellRendererComponent
                    (JList list, Object value, int index, 
                    boolean isSelected,boolean cellHasFocus) {
                Component comp = (Component)value;
                comp.setBackground(isSelected ?Color.LIGHT_GRAY :list.getBackground());
                return comp;
            }
        });
    }

private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
    final JLabel l = new JLabel((String)simbolos.getSelectedItem());
    l.setForeground(colorByIndex(sequencia.size()));
    JPanel jp = new JPanel(); jp.add(l);
    sequencia.add(jp); list.updateUI();
}//GEN-LAST:event_addActionPerformed
    
    private Color colorByIndex(int index) {
        return new Color(0xF24025^(0xFFFFFF*(index%2)));
    }
    
    private void rmvActionPerformed(java.awt.event.ActionEvent evt) {
        int toRmv = list.getSelectedIndex();
        if (toRmv < 0) return;
        for (int i =  toRmv +1, len = sequencia.size(); i < len; i++) {
            sequencia.get(i).getComponent(0).setForeground(colorByIndex(i-1));
        }
        sequencia.remove(list.getSelectedIndex());
        list.removeSelectionInterval(toRmv, toRmv);
        list.updateUI();
    }
    
    public void adicionaSimbolo(SimboloString s) {
        simbolos.addItem(s.getNome());
    }
    
    public void removeSimbolo(SimboloString s) {
        simbolos.removeItem(s.getNome());
    }
    
    public void removeTodosSimbolos() {
        simbolos.removeAllItems();
    }
    
    public List<SimboloString> getSequencia() {
        List<SimboloString> ret = new LinkedList<SimboloString>();
        if (sequencia.size() == 0) ret.add(GLC.LAMBDA);
        else for (JPanel p : sequencia) 
            ret.add(new SimboloString(((JLabel) p.getComponent(0)).getText()));
        return ret;
    }
    
    public void limparSequencia() {
        sequencia.removeAllElements();
        list.updateUI();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList list;
    private javax.swing.JPanel pButtons;
    private javax.swing.JPanel pCenter;
    private javax.swing.JPanel pNorth;
    private javax.swing.JPanel pSoult;
    private javax.swing.JComboBox simbolos;
    // End of variables declaration//GEN-END:variables

}
