/*
 * CadFunTransAP.java
 *
 * Created on 19 de Junho de 2007, 09:28
 */

package cassolato.rafael.sctmf.view.modelos_formais.ling_liv_contex.ap;

import cassolato.rafael.sctmf.model.pojo.Estado;
import cassolato.rafael.sctmf.model.pojo.Simbolo;
import cassolato.rafael.sctmf.model.pojo.TransicaoAP;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author  rafael2009_00
 */
public class CadFunTransAP extends javax.swing.JPanel {
    
    private Set<Simbolo> simAlfPilha;
    
    /** Creates new form CadFunTransAP */
    public CadFunTransAP() {
        initComponents();
        posInitComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Gerado ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        cbEstOri = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jPanel26 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        cbSimAlf = new javax.swing.JComboBox();
        jPanel27 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        cbBasePilha = new javax.swing.JComboBox();
        jLabel36 = new javax.swing.JLabel();
        jLabel36.setText("\u0393");
        jPanel29 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        cbEstDest = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel37.setText("\u0393*");
        fSimDestPilha = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        bAddLambida = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jPanel36 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        addRemTran = new cassolato.rafael.sctmf.view.components.AddRemButtonsPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        listTrans = new cassolato.rafael.sctmf.view.components.GenericJList();

        setLayout(new java.awt.BorderLayout());

        jLabel17.setPreferredSize(new java.awt.Dimension(40, 10));
        add(jLabel17, java.awt.BorderLayout.NORTH);

        jLabel18.setPreferredSize(new java.awt.Dimension(5, 14));
        add(jLabel18, java.awt.BorderLayout.EAST);

        jLabel19.setPreferredSize(new java.awt.Dimension(40, 10));
        add(jLabel19, java.awt.BorderLayout.SOUTH);

        jLabel20.setText("  ");
        add(jLabel20, java.awt.BorderLayout.WEST);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.X_AXIS));

        jPanel10.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel10.setMaximumSize(new java.awt.Dimension(20, 60));
        jPanel10.setPreferredSize(new java.awt.Dimension(20, 60));
        jLabel22.setFont(new java.awt.Font("Verdana", 1, 14));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel22.setPreferredSize(new java.awt.Dimension(10, 30));
        jLabel22.setText("\u03B4:");
        jPanel10.add(jLabel22, java.awt.BorderLayout.NORTH);

        jPanel8.add(jPanel10);

        jPanel24.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel24.setOpaque(false);
        jPanel24.setPreferredSize(new java.awt.Dimension(35, 30));
        cbEstOri.setBackground(new java.awt.Color(204, 255, 204));
        cbEstOri.setToolTipText("Estado de Origem");
        jPanel24.add(cbEstOri, java.awt.BorderLayout.CENTER);

        jLabel24.setFont(new java.awt.Font("Verdana", 1, 14));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("S");
        jLabel24.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel24.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel24.add(jLabel24, java.awt.BorderLayout.NORTH);

        jPanel8.add(jPanel24);

        jPanel25.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel25.setMaximumSize(new java.awt.Dimension(20, 60));
        jPanel25.setOpaque(false);
        jPanel25.setPreferredSize(new java.awt.Dimension(10, 60));
        jLabel28.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("x");
        jLabel28.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel28.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel25.add(jLabel28, java.awt.BorderLayout.NORTH);

        jPanel8.add(jPanel25);

        jPanel26.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel26.setOpaque(false);
        jPanel26.setPreferredSize(new java.awt.Dimension(40, 30));
        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel34.setPreferredSize(new java.awt.Dimension(20, 30));
        jLabel34.setText("(\u03a3U{\u03BB})");
        jPanel26.add(jLabel34, java.awt.BorderLayout.NORTH);

        cbSimAlf.setBackground(new java.awt.Color(255, 255, 204));
        cbSimAlf.setToolTipText("S\u00edmbolo do Alfabeto");
        cbSimAlf.addItem("\u03BB");
        jPanel26.add(cbSimAlf, java.awt.BorderLayout.CENTER);

        jPanel8.add(jPanel26);

        jPanel27.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel27.setMaximumSize(new java.awt.Dimension(20, 60));
        jPanel27.setPreferredSize(new java.awt.Dimension(10, 60));
        jLabel29.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("x");
        jLabel29.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel29.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel27.add(jLabel29, java.awt.BorderLayout.NORTH);

        jPanel8.add(jPanel27);

        jPanel28.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel28.setOpaque(false);
        jPanel28.setPreferredSize(new java.awt.Dimension(30, 30));
        cbBasePilha.setBackground(new java.awt.Color(200, 245, 240));
        cbBasePilha.setToolTipText("Topo da Pilha");
        jPanel28.add(cbBasePilha, java.awt.BorderLayout.CENTER);

        jLabel36.setFont(new java.awt.Font("Times New Roman", 1, 16));
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setToolTipText("S\u00edmbolos do Alfabeto da Pilha");
        jLabel36.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel36.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel28.add(jLabel36, java.awt.BorderLayout.NORTH);

        jPanel8.add(jPanel28);

        jPanel29.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel29.setPreferredSize(new java.awt.Dimension(10, 30));
        jLabel32.setFont(new java.awt.Font("Arial", 1, 15));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel32.setPreferredSize(new java.awt.Dimension(20, 30));
        jLabel32.setText("\u2192");
        jPanel29.add(jLabel32, java.awt.BorderLayout.NORTH);

        jPanel8.add(jPanel29);

        jPanel30.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel30.setOpaque(false);
        jPanel30.setPreferredSize(new java.awt.Dimension(35, 30));
        cbEstDest.setBackground(new java.awt.Color(204, 204, 255));
        cbEstDest.setToolTipText("Estado de Destino");
        jPanel30.add(cbEstDest, java.awt.BorderLayout.CENTER);

        jLabel33.setFont(new java.awt.Font("Verdana", 1, 14));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("S");
        jLabel33.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel33.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel30.add(jLabel33, java.awt.BorderLayout.NORTH);

        jPanel8.add(jPanel30);

        jPanel31.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel31.setMaximumSize(new java.awt.Dimension(20, 60));
        jPanel31.setPreferredSize(new java.awt.Dimension(10, 60));
        jLabel30.setFont(new java.awt.Font("Verdana", 1, 12));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("x");
        jLabel30.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel30.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel31.add(jLabel30, java.awt.BorderLayout.NORTH);

        jPanel8.add(jPanel31);

        jPanel32.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel32.setPreferredSize(new java.awt.Dimension(50, 30));
        jLabel37.setFont(new java.awt.Font("Times New Roman", 1, 16));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setToolTipText("S\u00edmbolos do Alfabeto da Pilha");
        jLabel37.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel37.setPreferredSize(new java.awt.Dimension(20, 30));
        jPanel32.add(jLabel37, java.awt.BorderLayout.NORTH);

        fSimDestPilha.setBackground(new java.awt.Color(255, 204, 204));
        fSimDestPilha.setToolTipText("Entrada da Pilha");
        jPanel32.add(fSimDestPilha, java.awt.BorderLayout.CENTER);

        jPanel8.add(jPanel32);

        jPanel3.add(jPanel8, java.awt.BorderLayout.NORTH);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        bAddLambida.setFont(new java.awt.Font("Verdana", 0, 10));
        bAddLambida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/toolbarButtonGraphics/navigation/Up16.gif")));
        bAddLambida.setToolTipText("Adicionar L\u00e2mbida");
        bAddLambida.setPreferredSize(new java.awt.Dimension(60, 20));
        bAddLambida.setText("\u03BB");
        bAddLambida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddLambidaActionPerformed(evt);
            }
        });

        jPanel7.add(bAddLambida);

        jPanel3.add(jPanel7, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        jPanel4.setLayout(new java.awt.GridLayout(5, 0));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED), "Legenda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 0, 153)));
        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jPanel13.setBackground(new java.awt.Color(204, 255, 204));
        jPanel19.add(jPanel13);

        jLabel23.setText("Estado de Origem");
        jPanel19.add(jLabel23);

        jPanel4.add(jPanel19);

        jPanel20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jPanel14.setBackground(new java.awt.Color(255, 255, 204));
        jPanel20.add(jPanel14);

        jLabel35.setText("S\u00edmbolo do Alfabeto");
        jPanel20.add(jLabel35);

        jPanel4.add(jPanel20);

        jPanel21.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jPanel15.setBackground(new java.awt.Color(200, 245, 240));
        jPanel21.add(jPanel15);

        jLabel38.setText("Topo da Pilha");
        jPanel21.add(jLabel38);

        jPanel4.add(jPanel21);

        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jPanel23.setBackground(new java.awt.Color(204, 204, 255));
        jPanel22.add(jPanel23);

        jLabel39.setText("Estado de Destino");
        jPanel22.add(jLabel39);

        jPanel4.add(jPanel22);

        jPanel35.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jPanel36.setBackground(new java.awt.Color(255, 204, 204));
        jPanel35.add(jPanel36);

        jLabel40.setText("Entrada da Pilha");
        jPanel35.add(jLabel40);

        jPanel4.add(jPanel35);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jLabel25.setPreferredSize(new java.awt.Dimension(40, 20));
        jPanel5.add(jLabel25, java.awt.BorderLayout.NORTH);

        jLabel26.setPreferredSize(new java.awt.Dimension(40, 20));
        jPanel5.add(jLabel26, java.awt.BorderLayout.SOUTH);

        jLabel27.setPreferredSize(new java.awt.Dimension(5, 14));
        jPanel5.add(jLabel27, java.awt.BorderLayout.WEST);

        jLabel31.setPreferredSize(new java.awt.Dimension(5, 14));
        jPanel5.add(jLabel31, java.awt.BorderLayout.EAST);

        jPanel5.add(addRemTran, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel5);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jLabel21.setFont(new java.awt.Font("Bitstream Vera Sans", 3, 12));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Transi\u00e7\u00f5es");
        jPanel6.add(jLabel21, java.awt.BorderLayout.NORTH);

        listTrans.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.add(listTrans, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel6);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents
    
    private void bAddLambidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddLambidaActionPerformed
        String txt = fSimDestPilha.getText();
        this.fSimDestPilha.setText(txt+"\u03BB");
    }//GEN-LAST:event_bAddLambidaActionPerformed
    
    private void posInitComponents() {
        // TRANSICOES
        this.addRemTran.getBAdd().addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent ae) {
                addActionTrans(null, null, null, null, null);
            }
        });
        
        this.addRemTran.getBRemove().addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent ae) {
                removeActionTrans();
            }
        });
    }
    
    private void addActionTrans(Estado estOri, Simbolo simb,
            Simbolo simBasePilha,
            Estado estDest, List<Simbolo> simbDesPilha) {
        
        String valueSimDestPilha = this.fSimDestPilha.getText();
        
        if(valueSimDestPilha.length()>0&&checkValuesList(valueSimDestPilha)) {
            StringBuffer sb = new StringBuffer("\u03B4(");
            // Indica que foi executada uma acao pelo usuário
            // de adicao de Transicao
            try {
                if(estOri==null) {
                    estOri = new Estado(cbEstOri.getSelectedItem().toString());
                    simb = new Simbolo(
                            cbSimAlf.getSelectedItem().toString().charAt(0));
                    simBasePilha = new Simbolo(
                            cbBasePilha.getSelectedItem().toString().charAt(0)
                            );
                    
                    estDest = new Estado(cbEstDest.getSelectedItem().toString());
                    
                    simbDesPilha = new ArrayList<Simbolo>();
                    for(char c : fSimDestPilha.getText().toCharArray())
                        simbDesPilha.add(new Simbolo(c));
                    
                }
                
                sb.append(estOri.getNome()); // EstOri
                sb.append(",");
                sb.append(simb.getNome());   // Simb
                sb.append(",");
                sb.append(simBasePilha.getNome());
                sb.append(") = {<");
                sb.append(estDest.getNome()); // EstDest
                sb.append(",");
                
                for(Simbolo s : simbDesPilha)
                    sb.append(s.getNome());
                
                sb.append(">}");
                
                String transicao = sb.toString();
                listTrans.addItem(transicao);
                
            }catch(Exception ex) {
                System.out.println("Algum JComboBox está null");
            }
            
        }else {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Valores Inválidos");
            fSimDestPilha.selectAll();
            fSimDestPilha.requestFocus(true);
        }
        
    }
    
    private void removeActionTrans() {
        this.listTrans.removeItens();
    }
    
    Set<TransicaoAP> getTransicoes() {
        Set<TransicaoAP> trans = new LinkedHashSet<TransicaoAP>();
        for(Object o : this.listTrans.getAllItens()) {
            Matcher m = this.getMatcher(o.toString());
            TransicaoAP t = new TransicaoAP();
            
            if(m.find()) {
                t.setEstOri(new Estado(m.group(1)));
                t.setSimbolo(new Simbolo(m.group(2).charAt(0)));
                t.setSimBasePilha(new Simbolo(m.group(3).charAt(0)));
                t.setEstDest(new Estado(m.group(5)));
                List<Simbolo> entPilha = new ArrayList<Simbolo>();
                for(char c : m.group(5).toCharArray())
                    entPilha.add(new Simbolo(c));
                
                t.setSimbDesPilha(entPilha);
                
                trans.add(t);
            }
            
        }
        
        return trans;
    }
    
    /**
     * Retorna o matcher para ser feito a pesquisa.<br>
     * Usando o metodo <b>group</b> obtemos:<br>
     * <i>Posicao 1</i> contem o estado de origem<br>
     * <i>Posicao 2</i> simbolo do alfabeto<br>
     * <i>Posicao 3</i> topo da pilha<br>
     * <i>Posicao 4</i> estado de destino<br>
     * <i>Posicao 5</i> entrada da pilha<br>
     *
     * @param str
     * @return Matcher
     */
    private Matcher getMatcher(String str) {
        String regex = ".?\\((.+),(.+),(.+)\\) = \\{<(.+),(.+)\\>}";
        
        return Pattern.compile(regex).matcher(str);
    }
    
    /**
     * Verifica se os simbolos que foram digitados
     * no TextField de simbolos da pilha
     * pertecem ao alfabeto da pilha.
     *
     */
    private boolean checkValuesList(String contextText) {
        // Valores permitidos
        StringBuffer sb = new StringBuffer("\u03BB");
        for(Simbolo s :simAlfPilha)
            sb.append(s.getNome());
        
        String valPermitidos = sb.toString();
        for(char c : contextText.toCharArray())
            if(!valPermitidos.contains(Character.toString(c)))
                return false;
        
        return true;
    }
    
    void observer(Set<Simbolo> sAlf, Set<Simbolo> sPilha, Set<Estado> estados) {
        this.simAlfPilha = sPilha;
        this.cbSimAlf.removeAllItems();
        for(Simbolo s : sAlf)
            this.cbSimAlf.addItem(s.getNome());
        
        this.cbBasePilha.removeAllItems();
        for(Simbolo s : sPilha)
            this.cbBasePilha.addItem(s.getNome());
        
        this.cbEstOri.removeAllItems();
        this.cbEstDest.removeAllItems();
        for(Estado e : estados) {
            String nomeEstado = e.getNome();
            this.cbEstDest.addItem(nomeEstado);
            this.cbEstOri.addItem(nomeEstado);
        }
        
       this.checkIfRemoveEstOrSim(sAlf, sPilha, estados) ;
    }
    
    private void checkIfRemoveEstOrSim(
            Set<Simbolo> sAlf, Set<Simbolo> sPilha, Set<Estado> estados) {
        Set<String> alf = new HashSet<String>();
        Set<String> pilha = new HashSet<String>();
        Set<String> estado = new HashSet<String>();
        
        for(Simbolo s : sAlf)
            alf.add(Character.toString(s.getNome()));
        
        for(Simbolo s : sPilha)
            pilha.add(Character.toString(s.getNome()));
        
        for(Estado e : estados)
            estado.add(e.getNome());
        
        /*for(Object obj : this.listTrans.getAllItens()) {
            Matcher m = this.getMatcher(obj.toString());            
            if(m.find()) {
                if(estado.contains(m.group(1))&&alf.contains(m.group(2))&&
                      pilha.contains(m.group(3))&&estado.contains(m.group(4))){                                
                    for(char c : m.group(5).toCharArray()) {
                        String value = Character.toString(c);
                        if(!(value.equals("\u03BB")||pilha.contains(value)));
                            listTrans.removeItem(obj);
                    }
                    
                }else
                    listTrans.removeItem(obj);
            }
                
        } */
        
    }
    
    // Declaração de variáveis - não modifique//GEN-BEGIN:variables
    private cassolato.rafael.sctmf.view.components.AddRemButtonsPanel addRemTran;
    private javax.swing.JButton bAddLambida;
    private javax.swing.JComboBox cbBasePilha;
    private javax.swing.JComboBox cbEstDest;
    private javax.swing.JComboBox cbEstOri;
    private javax.swing.JComboBox cbSimAlf;
    private javax.swing.JTextField fSimDestPilha;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private cassolato.rafael.sctmf.view.components.GenericJList listTrans;
    // Fim da declaração de variáveis//GEN-END:variables
    
}
