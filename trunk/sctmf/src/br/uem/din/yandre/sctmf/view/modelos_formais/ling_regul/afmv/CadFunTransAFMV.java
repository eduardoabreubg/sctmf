/*
 * CadFunTransAFMV.java
 *
 * Created on 24 de Setembro de 2007, 20:26
 */

package br.uem.din.yandre.sctmf.view.modelos_formais.ling_regul.afmv;

import br.uem.din.yandre.sctmf.model.pojo.Estado;
import br.uem.din.yandre.sctmf.model.pojo.Simbolo;
import br.uem.din.yandre.sctmf.view.modelos_formais.ling_regul.afd.CadFunTransAFD;
import java.util.Collection;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author  Cassolato
 */
public class CadFunTransAFMV extends CadFunTransAFD {
    
    /** Creates new form CadFunTransAFMV */
    public CadFunTransAFMV() {
        super();
        initComponents();
        posInitComponents();
    }        
    
    private void posInitComponents() {
        setLEsqTrans("\u03a3U{\u03BB}");      
        setLDirTrans("2q");        
        addSimCbSimb("\u03BB");
    }   
    
    @Override
    public void observer(
            Collection<Estado> estados, Collection<Simbolo> simbolos) { 
       super.observer(estados,simbolos);
       addSimCbSimb("\u03BB");
    }    
    
    @Override
    protected boolean wayAdd(String transicao) {        
        return true;
    }
    
    @Override
    protected void addAction(Estado estOri, Simbolo s, Estado estFin) {                                     
        StringBuffer sb = new StringBuffer("\u03B4 (");
       
        // Indica que foi executada uma acao pelo usuário
        // de adicao de Transicao
        try {
         
            if(estOri==null) {
                estOri = new Estado(getItemCbEstOri());
                s = new Simbolo(getItemCbSimb());
                estFin = new Estado(getItemCbEstDest());
            }

            sb.append(estOri.getNome()); // EstOri
            sb.append(", ");
            sb.append(s.getNome());   // Simb
            sb.append(") -> ");
            sb.append(estFin.getNome()); // EstOri

            String transicao = sb.toString();
            getGJList().addItem(transicao);           
        
        }catch(Exception ex) {
            System.out.println("Algum JComboBox está null");
        }
    }
    
    @Override
    protected Matcher getMatcher(String str) {
        String regex = ".*\\((.+), (.+)\\) -> (.+)";        
                
        return Pattern.compile(regex).matcher(str);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Gerado ">//GEN-BEGIN:initComponents
    private void initComponents() {


    }// </editor-fold>//GEN-END:initComponents
    
    
    // Declaração de variáveis - não modifique//GEN-BEGIN:variables
    // Fim da declaração de variáveis//GEN-END:variables
    
}
