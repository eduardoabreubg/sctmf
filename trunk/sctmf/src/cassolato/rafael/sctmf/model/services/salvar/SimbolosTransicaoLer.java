package cassolato.rafael.sctmf.model.services.salvar;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SimbolosTransicaoLer.java
 *
 * Created on 17/11/2009, 14:20:08
 */


import br.uem.din.yandre.sctmf.model.pojo.Simbolo;
import br.uem.din.yandre.sctmf.view.modelos_formais.ling_enum_rec.post.PostGUI;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author Administrador
 */
public class SimbolosTransicaoLer extends javax.swing.JDialog {

    private PostGUI post;
    private String retorno = null;

    /** Creates new form SimbolosTransicaoLer */
    public SimbolosTransicaoLer(PostGUI post) {
        this.post = post;
        initComponents();
        posInitComponents();
        this.glSimbolos.addItem('#');
        this.glSimbolos.addItem('\u03BB');
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pMain = new javax.swing.JPanel();
        glSimbolos = new br.uem.din.yandre.sctmf.view.components.GenericJList();
        addRemButtonsSimTrans = new br.uem.din.yandre.sctmf.view.components.AddRemButtonsPanel();
        glSimbolosTransicao = new br.uem.din.yandre.sctmf.view.components.GenericJList();
        pBotoes = new javax.swing.JPanel();
        bOk = new javax.swing.JButton();
        bCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(SimbolosTransicaoLer.class, "SimbolosTransicaoLer.title")); // NOI18N
        setAlwaysOnTop(true);

        pMain.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 100;
        gridBagConstraints.insets = new java.awt.Insets(47, 20, 47, 10);
        pMain.add(glSimbolos, gridBagConstraints);
        pMain.add(addRemButtonsSimTrans, new java.awt.GridBagConstraints());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 100;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 20, 20);
        pMain.add(glSimbolosTransicao, gridBagConstraints);

        getContentPane().add(pMain, java.awt.BorderLayout.CENTER);

        bOk.setText(org.openide.util.NbBundle.getMessage(SimbolosTransicaoLer.class, "SimbolosTransicaoLer.bOk.text")); // NOI18N
        bOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOkActionPerformed(evt);
            }
        });
        pBotoes.add(bOk);

        bCancelar.setText(org.openide.util.NbBundle.getMessage(SimbolosTransicaoLer.class, "SimbolosTransicaoLer.bCancelar.text")); // NOI18N
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });
        pBotoes.add(bCancelar);

        getContentPane().add(pBotoes, java.awt.BorderLayout.SOUTH);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-300)/2, (screenSize.height-200)/2, 300, 200);
    }// </editor-fold>//GEN-END:initComponents

    private void bOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOkActionPerformed

        StringBuffer sb = new StringBuffer();
        for (Object o : glSimbolosTransicao.getAllItens()) {
            sb.append((Character) o + ",");
        }
        System.out.println("s " + sb);

        setRetorno(sb.toString());
        this.dispose();
    }//GEN-LAST:event_bOkActionPerformed

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_bCancelarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private br.uem.din.yandre.sctmf.view.components.AddRemButtonsPanel addRemButtonsSimTrans;
    private javax.swing.JButton bCancelar;
    private javax.swing.JButton bOk;
    private br.uem.din.yandre.sctmf.view.components.GenericJList glSimbolos;
    private br.uem.din.yandre.sctmf.view.components.GenericJList glSimbolosTransicao;
    private javax.swing.JPanel pBotoes;
    private javax.swing.JPanel pMain;
    // End of variables declaration//GEN-END:variables

    public void observer(Simbolo s, boolean b) {
        if (b) {
            this.glSimbolos.addItem(s.getNome());
        } else {
            this.glSimbolos.removeItem(s.getNome());
        }
    }

    private void posInitComponents() {

        this.addRemButtonsSimTrans.getBAdd().addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent ae) {
                addActionAlf();
            }
        });

        this.addRemButtonsSimTrans.getBRemove().addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent ae) {
                removeActionAlf();
            }
        });

        for (Simbolo s : post.getSimbolos()) {
            this.glSimbolos.addItem(s.getNome());
        }

    }

    private void removeActionAlf() {
        for (Object o : this.glSimbolosTransicao.removeItens()) {
            this.glSimbolos.addItem((Character) o);
        }
//          this.gui.removeSimbolo(
        //              new Simbolo((Character)o), 0);
    }

    private void addActionAlf() {
        for (Object o : this.glSimbolos.removeItens()) {
            this.glSimbolosTransicao.addItem((Character) o);
        }
        //this.gui.addSimbolo(simbAlf, 0);
    }

    public String getRetorno() {
        return retorno;
    }

    public void setRetorno(String retorno) {
        this.retorno = retorno;
    }

    @Override
    public void setVisible(boolean b) {
        for (Simbolo s : post.getSimbolos()) {
            if ((!this.glSimbolos.containsItem(s.getNome())) && (!this.glSimbolosTransicao.containsItem(s.getNome()))) {
                this.glSimbolos.addItem(s.getNome());
            }
        }
        super.setVisible(b);

    }
}
