/*
 * CadFunTransAFND.java
 *
 * Created on 26 de Maio de 2007, 17:22
 */

package cassolato.rafael.sctmf.view.modelos_formais.ling_regul.afnd;

import cassolato.rafael.sctmf.view.modelos_formais.ling_regul.afd.CadFunTransAFD;

/**
 *
 * @author  Cassolato
 */
public class CadFunTransAFND extends CadFunTransAFD {
    
    /** Creates new form BeanForm */
    public CadFunTransAFND() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Cadastro das Fun\u00e7\u00f5es de Transi\u00e7\u00e3o", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 255)));
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Metodo sobrescrito para permitir um estado origem<br>
     * e um simbolo, possam chegar a mais de um estado final<br>
     * caracteristica essa do AFND.
     *
     * @param String
     * @return boolean
     */
    protected boolean wayAdd(String transicao) {        
        return true;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
