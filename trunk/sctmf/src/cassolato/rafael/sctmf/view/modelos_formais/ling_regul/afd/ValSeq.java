/*
 * ValSeq.java
 *
 * Created on 7 de Maio de 2007, 09:08
 */

package cassolato.rafael.sctmf.view.modelos_formais.ling_regul.afd;

import cassolato.rafael.sctmf.model.pojo.AFD;
import cassolato.rafael.sctmf.model.pojo.Estado;
import cassolato.rafael.sctmf.model.pojo.ModeloFormal;
import cassolato.rafael.sctmf.model.pojo.Simbolo;
import cassolato.rafael.sctmf.model.pojo.Transicao;
import cassolato.rafael.sctmf.model.services.ValidaSequencia;
import cassolato.rafael.sctmf.model.services.Validacao;

/**
 *
 * @author  rafael2009_00
 */
public class ValSeq extends javax.swing.JPanel {   
    private AFD afd = null;
    
    /** Creates new form ValSeq */
    public ValSeq() {
        initComponents();
        posInitComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Código Gerado ">//GEN-BEGIN:initComponents
    private void initComponents() {
        validaSequenciaGUI = new cassolato.rafael.sctmf.view.components.ValidaSequenciaGUI();

        setLayout(new java.awt.GridLayout());

        add(validaSequenciaGUI);

    }// </editor-fold>//GEN-END:initComponents
    
     private void posInitComponents() { 
        this.validaSequenciaGUI.setSplitPaneLocation(115);
       
        this.validaSequenciaGUI.getBValidar().addActionListener(
                new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent ae) {
                validarSequencia();
            }
        });            
    }
     
    private void validarSequencia() {        
        this.validaSequenciaGUI.validarSequencia(
                this.afd,
                this.validaSequenciaGUI.getSequencia());
    }
    
    /**
     * Atualiza os dados do automato com pilha, da Area de Informações.
     */
    void observerValSeq(AFD afd) {
        this.afd = afd;        
        this.validaSequenciaGUI.clearArea();   
        this.validaSequenciaGUI.setTextAInf(
                "V = <\u03a3, S, S\u2080, \u03B4, F>\n");
                
        StringBuffer sb = new StringBuffer();
        
        sb.append("\u03a3 = {");  // Add Simbolos
        for(Simbolo s : afd.getSimbolos())
            sb.append(s.getNome()+", ");                
        sb = this.validaSequenciaGUI.formataSb(sb);
                
        sb.append("S = {");
        for(Estado e : afd.getEstados())
            sb.append("<"+e.getNome()+">, ");          
        sb = this.validaSequenciaGUI.formataSb(sb);
               
        Estado aux = afd.getEstadoInicial();
        sb.append("S\u2080 = <");
        if(aux!=null)
             sb.append(aux.getNome());        
        sb.append(">\n");
        this.validaSequenciaGUI.setTextAInf(sb.toString());
        
        sb = new StringBuffer();
        
        sb.append("F = {");
        for(Estado e : afd.getEstadosFinais())
            sb.append("<"+e.getNome()+">, "); 
        sb = this.validaSequenciaGUI.formataSb(sb);        
        
        for(Transicao t : afd.getTransicoes()) {
            sb.append("\n");
            sb.append("\u03B4(<");
            sb.append(t.getEstOri().getNome());
            sb.append(">, ");
            sb.append(t.getSimbolo().getNome());
            sb.append(") = <");
            sb.append(t.getEstDest().getNome());
            sb.append(">");
        }         
                
        this.validaSequenciaGUI.setTextAInf(sb.toString());
    }
        
    // Declaração de variáveis - não modifique//GEN-BEGIN:variables
    private cassolato.rafael.sctmf.view.components.ValidaSequenciaGUI validaSequenciaGUI;
    // Fim da declaração de variáveis//GEN-END:variables
    
}
